{"sections":[],"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/Codability\/documentation\/Codability\/IsOptional","doc:\/\/Codability\/documentation\/Codability\/Transcodability"]},{"title":"Structures","identifiers":["doc:\/\/Codability\/documentation\/Codability\/TC","doc:\/\/Codability\/documentation\/Codability\/UncorrectableBadURL"]},{"identifiers":["doc:\/\/Codability\/documentation\/Codability\/CodingKeys(_:)"],"title":"Macros"},{"identifiers":["doc:\/\/Codability\/documentation\/Codability\/Foundation","doc:\/\/Codability\/documentation\/Codability\/Swift"],"title":"Extended Modules"}],"abstract":[{"type":"text","text":"A collection of macros and property wrappers to help with Codable conformance."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Original source is at ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/nickmain\/Codability","isActive":true}]},{"type":"paragraph","inlineContent":[{"text":"This collection currently contains the following utilities:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/Codability\/documentation\/Codability\/CodingKeys(_:)","type":"reference"},{"type":"text","text":" - a macro to allow minimal specification of alternate coding keys"}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","isActive":true,"type":"reference"},{"type":"text","text":" - a property wrapper that proxies Codable conformance to allow fixing deficiencies."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"title":"Codability","roleHeading":"Framework","role":"collection","externalID":"Codability","symbolKind":"module","modules":[{"name":"Codability"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/codability"]}],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Codability\/documentation\/Codability"},"kind":"symbol","references":{"doc://Codability/documentation/Codability/IsOptional":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"IsOptional","kind":"identifier"}],"abstract":[{"text":"Allow “where” clauses to specify that a type is Optional","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/IsOptional","navigatorTitle":[{"kind":"identifier","text":"IsOptional"}],"title":"IsOptional","url":"\/documentation\/codability\/isoptional","role":"symbol"},"doc://Codability/documentation/Codability":{"kind":"symbol","title":"Codability","role":"collection","identifier":"doc:\/\/Codability\/documentation\/Codability","url":"\/documentation\/codability","abstract":[{"type":"text","text":"A collection of macros and property wrappers to help with Codable conformance."}],"type":"topic"},"doc://Codability/documentation/Codability/TC":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","url":"\/documentation\/codability\/tc","type":"topic","navigatorTitle":[{"text":"TC","kind":"identifier"}],"title":"TC","abstract":[{"type":"text","text":"Property wrapper that is Codable and can act as a proxy between"},{"type":"text","text":" "},{"type":"text","text":"the wrapped type and another Codable type. The wrapped type must"},{"type":"text","text":" "},{"type":"text","text":"conform to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability"},{"type":"text","text":". The proxy target type is "},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","type":"reference","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TC","kind":"identifier"}]},"doc://Codability/documentation/Codability/UncorrectableBadURL":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UncorrectableBadURL"}],"url":"\/documentation\/codability\/uncorrectablebadurl","navigatorTitle":[{"kind":"identifier","text":"UncorrectableBadURL"}],"identifier":"doc:\/\/Codability\/documentation\/Codability\/UncorrectableBadURL","role":"symbol","title":"UncorrectableBadURL","kind":"symbol","abstract":[{"type":"text","text":"Error thrown when a URL cannot be decoded from a String"}],"type":"topic"},"doc://Codability/documentation/Codability/Transcodability":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","title":"Transcodability","url":"\/documentation\/codability\/transcodability","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Transcodability"}],"navigatorTitle":[{"kind":"identifier","text":"Transcodability"}],"abstract":[{"type":"text","text":"Conform to this protocol to provide a way to encode\/decode from another"},{"type":"text","text":" "},{"text":"Codable type and allow a type to be used with the ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","isActive":true,"type":"reference"},{"type":"text","text":" property wrapper."}]},"doc://Codability/documentation/Codability/Foundation":{"kind":"symbol","title":"Foundation","role":"collection","identifier":"doc:\/\/Codability\/documentation\/Codability\/Foundation","url":"\/documentation\/codability\/foundation","abstract":[],"type":"topic"},"doc://Codability/documentation/Codability/CodingKeys(_:)":{"abstract":[{"text":"Add a CodingKeys enum in the same way as the default Swift Codable synthesis but with","type":"text"},{"text":" ","type":"text"},{"text":"a set of coding key value overrides. Normally, adding a coding key override would require","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"hand-writing the entire CodingKeys enum with all the property names included, not just the"},{"text":" ","type":"text"},{"type":"text","text":"overridden property."}],"identifier":"doc:\/\/Codability\/documentation\/Codability\/CodingKeys(_:)","url":"\/documentation\/codability\/codingkeys(_:)","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"role":"symbol","title":"CodingKeys(_:)"},"https://github.com/nickmain/Codability":{"url":"https:\/\/github.com\/nickmain\/Codability","title":"https:\/\/github.com\/nickmain\/Codability","type":"link","identifier":"https:\/\/github.com\/nickmain\/Codability","titleInlineContent":[{"text":"https:\/\/github.com\/nickmain\/Codability","type":"text"}]},"doc://Codability/documentation/Codability/Transcodability/CodableType":{"role":"symbol","kind":"symbol","required":true,"type":"topic","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","url":"\/documentation\/codability\/transcodability\/codabletype","title":"CodableType","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodableType"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"text":", ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}],"abstract":[{"type":"text","text":"The Codable type that encoding and decoding operations are forwarded to."}]},"doc://Codability/documentation/Codability/Swift":{"url":"\/documentation\/codability\/swift","identifier":"doc:\/\/Codability\/documentation\/Codability\/Swift","role":"collection","title":"Swift","kind":"symbol","abstract":[],"type":"topic"}}}