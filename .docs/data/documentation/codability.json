{"topicSections":[{"identifiers":["doc:\/\/Codability\/documentation\/Codability\/IsOptional","doc:\/\/Codability\/documentation\/Codability\/Transcodability"],"title":"Protocols"},{"identifiers":["doc:\/\/Codability\/documentation\/Codability\/TC","doc:\/\/Codability\/documentation\/Codability\/UncorrectableBadURL"],"title":"Structures"},{"title":"Macros","identifiers":["doc:\/\/Codability\/documentation\/Codability\/CodingKeys(_:)"]},{"title":"Extended Modules","identifiers":["doc:\/\/Codability\/documentation\/Codability\/Foundation","doc:\/\/Codability\/documentation\/Codability\/Swift"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/codability"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"abstract":[{"text":"A collection of macros and property wrappers to help with Codable conformance.","type":"text"}],"kind":"symbol","primaryContentSections":[{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Original source is at "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/nickmain\/Codability"}]},{"type":"paragraph","inlineContent":[{"text":"This collection currently contains the following utilities:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/Codability\/documentation\/Codability\/CodingKeys(_:)","type":"reference"},{"text":" - a macro to allow minimal specification of alternate coding keys","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","isActive":true,"type":"reference"},{"type":"text","text":" - a property wrapper that proxies Codable conformance to allow fixing deficiencies."}]}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Codability\/documentation\/Codability"},"sections":[],"metadata":{"role":"collection","modules":[{"name":"Codability"}],"externalID":"Codability","symbolKind":"module","title":"Codability","roleHeading":"Framework"},"references":{"doc://Codability/documentation/Codability/TC":{"type":"topic","abstract":[{"text":"Property wrapper that is Codable and can act as a proxy between","type":"text"},{"type":"text","text":" "},{"text":"the wrapped type and another Codable type. The wrapped type must","type":"text"},{"text":" ","type":"text"},{"text":"conform to ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","isActive":true,"type":"reference"},{"text":". The proxy target type is ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","isActive":true,"type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/codability\/tc","role":"symbol","title":"TC","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TC"}],"navigatorTitle":[{"kind":"identifier","text":"TC"}],"kind":"symbol"},"doc://Codability/documentation/Codability/CodingKeys(_:)":{"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"CodingKeys(_:)","identifier":"doc:\/\/Codability\/documentation\/Codability\/CodingKeys(_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Add a CodingKeys enum in the same way as the default Swift Codable synthesis but with"},{"text":" ","type":"text"},{"type":"text","text":"a set of coding key value overrides. Normally, adding a coding key override would require"},{"type":"text","text":" "},{"type":"text","text":"hand-writing the entire CodingKeys enum with all the property names included, not just the"},{"text":" ","type":"text"},{"text":"overridden property.","type":"text"}],"url":"\/documentation\/codability\/codingkeys(_:)"},"https://github.com/nickmain/Codability":{"titleInlineContent":[{"text":"https:\/\/github.com\/nickmain\/Codability","type":"text"}],"identifier":"https:\/\/github.com\/nickmain\/Codability","type":"link","title":"https:\/\/github.com\/nickmain\/Codability","url":"https:\/\/github.com\/nickmain\/Codability"},"doc://Codability/documentation/Codability":{"title":"Codability","kind":"symbol","role":"collection","url":"\/documentation\/codability","identifier":"doc:\/\/Codability\/documentation\/Codability","type":"topic","abstract":[{"text":"A collection of macros and property wrappers to help with Codable conformance.","type":"text"}]},"doc://Codability/documentation/Codability/Transcodability":{"url":"\/documentation\/codability\/transcodability","role":"symbol","title":"Transcodability","type":"topic","navigatorTitle":[{"text":"Transcodability","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Transcodability","kind":"identifier"}],"abstract":[{"text":"Conform to this protocol to provide a way to encode\/decode from another","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Codable type and allow a type to be used with the "},{"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","isActive":true},{"type":"text","text":" property wrapper."}]},"doc://Codability/documentation/Codability/Swift":{"type":"topic","title":"Swift","abstract":[],"identifier":"doc:\/\/Codability\/documentation\/Codability\/Swift","url":"\/documentation\/codability\/swift","kind":"symbol","role":"collection"},"doc://Codability/documentation/Codability/IsOptional":{"navigatorTitle":[{"kind":"identifier","text":"IsOptional"}],"role":"symbol","title":"IsOptional","identifier":"doc:\/\/Codability\/documentation\/Codability\/IsOptional","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"IsOptional","kind":"identifier"}],"url":"\/documentation\/codability\/isoptional","abstract":[{"type":"text","text":"Allow “where” clauses to specify that a type is Optional"}],"type":"topic"},"doc://Codability/documentation/Codability/Transcodability/CodableType":{"url":"\/documentation\/codability\/transcodability\/codabletype","role":"symbol","title":"CodableType","type":"topic","kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableType"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"text":", ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}],"abstract":[{"text":"The Codable type that encoding and decoding operations are forwarded to.","type":"text"}],"required":true},"doc://Codability/documentation/Codability/UncorrectableBadURL":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UncorrectableBadURL"}],"url":"\/documentation\/codability\/uncorrectablebadurl","navigatorTitle":[{"text":"UncorrectableBadURL","kind":"identifier"}],"abstract":[{"text":"Error thrown when a URL cannot be decoded from a String","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Codability\/documentation\/Codability\/UncorrectableBadURL","title":"UncorrectableBadURL","role":"symbol"},"doc://Codability/documentation/Codability/Foundation":{"title":"Foundation","kind":"symbol","role":"collection","url":"\/documentation\/codability\/foundation","identifier":"doc:\/\/Codability\/documentation\/Codability\/Foundation","type":"topic","abstract":[]}}}