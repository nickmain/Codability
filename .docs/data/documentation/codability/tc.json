{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Codability\/Se","doc:\/\/Codability\/SE"],"type":"conformsTo"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/Codability\/documentation\/Codability\/TC\/init(from:)","doc:\/\/Codability\/documentation\/Codability\/TC\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Codability\/documentation\/Codability\/TC\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/Codability\/documentation\/Codability\/TC\/encode(to:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/codability\/tc"]}],"metadata":{"externalID":"s:10Codability2TCV","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"TC"}],"modules":[{"name":"Codability"}],"symbolKind":"struct","title":"TC","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TC"}]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TC"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Transcodability","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","preciseIdentifier":"s:10Codability15TranscodabilityP"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This is useful where the wrapped type is already codable, so adding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Codable conformance via an extension does nothing, but the default"},{"text":" ","type":"text"},{"type":"text","text":"conformance needs to be overridden to fix deficiencies."}]},{"type":"paragraph","inlineContent":[{"text":"The property type may be optional or non-optional.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Example, assuming the example ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability"},{"text":" conformance for URL:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["   struct SomeStruct: Codable {","       @TC var tcURL: URL","       @TC var tcOptionalURL: URL?","   }"]},{"inlineContent":[{"type":"text","text":"This intercepts the URL decoding from String and adds correction of non-percent-encoded"},{"type":"text","text":" "},{"text":"spaces, which would otherwise cause the default URL decoding to throw. In the optional case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it also handles an empty string being present in the JSON instead of null or missing."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Codability\/documentation\/Codability\/TC"},"abstract":[{"text":"Property wrapper that is Codable and can act as a proxy between","type":"text"},{"type":"text","text":" "},{"text":"the wrapped type and another Codable type. The wrapped type must","type":"text"},{"type":"text","text":" "},{"text":"conform to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability"},{"text":". The proxy target type is ","type":"text"},{"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","isActive":true},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/Codability\/documentation\/Codability"]]},"references":{"doc://Codability/SE":{"identifier":"doc:\/\/Codability\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://Codability/documentation/Codability/TC/init(wrappedValue:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC\/init(wrappedValue:)","abstract":[],"title":"init(wrappedValue:)","role":"symbol","url":"\/documentation\/codability\/tc\/init(wrappedvalue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10Codability2TCV1Txmfp"},{"text":")","kind":"text"}]},"doc://Codability/documentation/Codability":{"title":"Codability","kind":"symbol","role":"collection","url":"\/documentation\/codability","identifier":"doc:\/\/Codability\/documentation\/Codability","type":"topic","abstract":[{"text":"A collection of macros and property wrappers to help with Codable conformance.","type":"text"}]},"doc://Codability/Se":{"type":"unresolvable","identifier":"doc:\/\/Codability\/Se","title":"Swift.Decodable"},"doc://Codability/documentation/Codability/TC/wrappedValue":{"title":"wrappedValue","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Codability2TCV1Txmfp","text":"T","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC\/wrappedValue","url":"\/documentation\/codability\/tc\/wrappedvalue","abstract":[]},"doc://Codability/documentation/Codability/TC/encode(to:)":{"url":"\/documentation\/codability\/tc\/encode(to:)","role":"symbol","title":"encode(to:)","type":"topic","kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"abstract":[]},"doc://Codability/documentation/Codability/TC":{"type":"topic","abstract":[{"text":"Property wrapper that is Codable and can act as a proxy between","type":"text"},{"type":"text","text":" "},{"text":"the wrapped type and another Codable type. The wrapped type must","type":"text"},{"text":" ","type":"text"},{"text":"conform to ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","isActive":true,"type":"reference"},{"text":". The proxy target type is ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","isActive":true,"type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/codability\/tc","role":"symbol","title":"TC","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TC"}],"navigatorTitle":[{"kind":"identifier","text":"TC"}],"kind":"symbol"},"doc://Codability/documentation/Codability/Transcodability/CodableType":{"url":"\/documentation\/codability\/transcodability\/codabletype","role":"symbol","title":"CodableType","type":"topic","kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableType"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"text":", ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}],"abstract":[{"text":"The Codable type that encoding and decoding operations are forwarded to.","type":"text"}],"required":true},"doc://Codability/documentation/Codability/TC/init(from:)":{"abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"init(from:)","url":"\/documentation\/codability\/tc\/init(from:)","role":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC\/init(from:)","type":"topic","kind":"symbol"},"doc://Codability/documentation/Codability/Transcodability":{"url":"\/documentation\/codability\/transcodability","role":"symbol","title":"Transcodability","type":"topic","navigatorTitle":[{"text":"Transcodability","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Transcodability","kind":"identifier"}],"abstract":[{"text":"Conform to this protocol to provide a way to encode\/decode from another","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Codable type and allow a type to be used with the "},{"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","isActive":true},{"type":"text","text":" property wrapper."}]}}}