{"hierarchy":{"paths":[["doc:\/\/Codability\/documentation\/Codability"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TC"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","text":"Transcodability","kind":"typeIdentifier","preciseIdentifier":"s:10Codability15TranscodabilityP"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is useful where the wrapped type is already codable, so adding"},{"text":" ","type":"text"},{"type":"text","text":"Codable conformance via an extension does nothing, but the default"},{"type":"text","text":" "},{"type":"text","text":"conformance needs to be overridden to fix deficiencies."}]},{"type":"paragraph","inlineContent":[{"text":"The property type may be optional or non-optional.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example, assuming the example "},{"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","isActive":true},{"type":"text","text":" conformance for URL:"}]},{"type":"codeListing","code":["   struct SomeStruct: Codable {","       @TC var tcURL: URL","       @TC var tcOptionalURL: URL?","   }"],"syntax":"swift"},{"inlineContent":[{"text":"This intercepts the URL decoding from String and adds correction of non-percent-encoded","type":"text"},{"type":"text","text":" "},{"type":"text","text":"spaces, which would otherwise cause the default URL decoding to throw. In the optional case"},{"type":"text","text":" "},{"type":"text","text":"it also handles an empty string being present in the JSON instead of null or missing."}],"type":"paragraph"}]}],"abstract":[{"text":"Property wrapper that is Codable and can act as a proxy between","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the wrapped type and another Codable type. The wrapped type must"},{"text":" ","type":"text"},{"text":"conform to ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","type":"reference","isActive":true},{"type":"text","text":". The proxy target type is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType"},{"text":".","type":"text"}],"metadata":{"role":"symbol","externalID":"s:10Codability2TCV","modules":[{"name":"Codability"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TC","kind":"identifier"}],"roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"text":"TC","kind":"identifier"}],"title":"TC"},"kind":"symbol","identifier":{"url":"doc:\/\/Codability\/documentation\/Codability\/TC","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/codability\/tc"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/Codability\/documentation\/Codability\/TC\/init(from:)","doc:\/\/Codability\/documentation\/Codability\/TC\/init(wrappedValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/Codability\/documentation\/Codability\/TC\/wrappedValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Codability\/documentation\/Codability\/TC\/encode(to:)"]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Codability\/Se","doc:\/\/Codability\/SE"],"kind":"relationships","title":"Conforms To"}],"references":{"doc://Codability/documentation/Codability/TC/init(wrappedValue:)":{"role":"symbol","url":"\/documentation\/codability\/tc\/init(wrappedvalue:)","type":"topic","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC\/init(wrappedValue:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Codability2TCV1Txmfp","text":"T"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(wrappedValue:)"},"doc://Codability/documentation/Codability/Transcodability/CodableType":{"role":"symbol","kind":"symbol","required":true,"type":"topic","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","url":"\/documentation\/codability\/transcodability\/codabletype","title":"CodableType","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodableType"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"text":", ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}],"abstract":[{"type":"text","text":"The Codable type that encoding and decoding operations are forwarded to."}]},"doc://Codability/documentation/Codability":{"kind":"symbol","title":"Codability","role":"collection","identifier":"doc:\/\/Codability\/documentation\/Codability","url":"\/documentation\/codability","abstract":[{"type":"text","text":"A collection of macros and property wrappers to help with Codable conformance."}],"type":"topic"},"doc://Codability/documentation/Codability/Transcodability":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","title":"Transcodability","url":"\/documentation\/codability\/transcodability","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Transcodability"}],"navigatorTitle":[{"kind":"identifier","text":"Transcodability"}],"abstract":[{"type":"text","text":"Conform to this protocol to provide a way to encode\/decode from another"},{"type":"text","text":" "},{"text":"Codable type and allow a type to be used with the ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","isActive":true,"type":"reference"},{"type":"text","text":" property wrapper."}]},"doc://Codability/documentation/Codability/TC/wrappedValue":{"abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Codability2TCV1Txmfp","kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/codability\/tc\/wrappedvalue","type":"topic","role":"symbol","title":"wrappedValue","kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC\/wrappedValue"},"doc://Codability/documentation/Codability/TC/encode(to:)":{"abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/codability\/tc\/encode(to:)","type":"topic","role":"symbol","title":"encode(to:)","kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC\/encode(to:)"},"doc://Codability/Se":{"identifier":"doc:\/\/Codability\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://Codability/documentation/Codability/TC/init(from:)":{"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/codability\/tc\/init(from:)","type":"topic","role":"symbol","title":"init(from:)","kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC\/init(from:)"},"doc://Codability/documentation/Codability/TC":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","url":"\/documentation\/codability\/tc","type":"topic","navigatorTitle":[{"text":"TC","kind":"identifier"}],"title":"TC","abstract":[{"type":"text","text":"Property wrapper that is Codable and can act as a proxy between"},{"type":"text","text":" "},{"type":"text","text":"the wrapped type and another Codable type. The wrapped type must"},{"type":"text","text":" "},{"type":"text","text":"conform to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability"},{"type":"text","text":". The proxy target type is "},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","type":"reference","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TC","kind":"identifier"}]},"doc://Codability/SE":{"type":"unresolvable","identifier":"doc:\/\/Codability\/SE","title":"Swift.Encodable"}}}