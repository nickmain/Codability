{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(CodingKeys), named(debug)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a string consisting of comma separated elements of the form"},{"type":"text","text":" "},{"text":"“property-name=coding-key”. The property name and coding key will have","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading and trailing whitespace removed before being used. An empty string"},{"text":" ","type":"text"},{"type":"text","text":"will produce a warning."}]}],"name":"keys"}]},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Example usage:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@CodingKeys(\"name=firstName, lastName=surname\")","struct Person: Codable {","   let name: String","   let lastName: String","   let age: Int","}"]},{"type":"paragraph","inlineContent":[{"text":"will generate the following coding keys enum:","type":"text"}]},{"code":["enum CodingKeys: String, CodingKey {","    case name = \"firstName\"","    case lastName = \"surname\"","    case age","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"An error is produced if the property name of an override does not match a stored property","type":"text"},{"type":"text","text":" "},{"text":"of the type.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"These are some of the other diagnostics that may be produced:","type":"text"}]},{"inlineContent":[{"identifier":"diagnostics.png","type":"image"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Codability\/documentation\/Codability"]]},"kind":"symbol","sections":[],"abstract":[{"text":"Add a CodingKeys enum in the same way as the default Swift Codable synthesis but with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a set of coding key value overrides. Normally, adding a coding key override would require"},{"type":"text","text":" "},{"type":"text","text":"hand-writing the entire CodingKeys enum with all the property names included, not just the"},{"type":"text","text":" "},{"type":"text","text":"overridden property."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Codability\/documentation\/Codability\/CodingKeys(_:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/codability\/codingkeys(_:)"]}],"metadata":{"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"modules":[{"name":"Codability"}],"externalID":"s:10Codability10CodingKeysyySScfm","roleHeading":"Macro","symbolKind":"macro","title":"CodingKeys(_:)"},"references":{"doc://Codability/documentation/Codability":{"role":"collection","identifier":"doc:\/\/Codability\/documentation\/Codability","url":"\/documentation\/codability","abstract":[{"text":"A collection of macros and property wrappers to help with Codable conformance.","type":"text"}],"kind":"symbol","title":"Codability","type":"topic"},"doc://Codability/documentation/Codability/CodingKeys(_:)":{"role":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/CodingKeys(_:)","url":"\/documentation\/codability\/codingkeys(_:)","abstract":[{"text":"Add a CodingKeys enum in the same way as the default Swift Codable synthesis but with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a set of coding key value overrides. Normally, adding a coding key override would require"},{"type":"text","text":" "},{"type":"text","text":"hand-writing the entire CodingKeys enum with all the property names included, not just the"},{"type":"text","text":" "},{"type":"text","text":"overridden property."}],"kind":"symbol","title":"CodingKeys(_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"diagnostics.png":{"alt":"Screenshot of diagnostics produced by the macro","type":"image","identifier":"diagnostics.png","variants":[{"traits":["1x","light"],"url":"\/images\/diagnostics.png"}]}}}