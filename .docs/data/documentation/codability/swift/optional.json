{"kind":"symbol","metadata":{"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Codability"}],"symbolKind":"extension","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Swift","kind":"identifier"},{"text":".","kind":"text"},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"identifier"}],"externalID":"s:e:s:Sq10Codability10Foundation3URLVRszlE6decode4fromADSgSS_tKFZ","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"roleHeading":"Extended Enumeration","title":"Optional"},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Codability\/documentation\/Codability\/IsOptional","doc:\/\/Codability\/s23ExpressibleByNilLiteralP","doc:\/\/Codability\/documentation\/Codability\/Transcodability"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Codability\/documentation\/Codability\/Swift\/Optional","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Codability\/documentation\/Codability","doc:\/\/Codability\/documentation\/Codability\/Swift"]]},"topicSections":[{"title":"Default Implementations","identifiers":["doc:\/\/Codability\/documentation\/Codability\/Swift\/Optional\/Transcodability-Implementations"],"generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Swift"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sq","text":"Optional"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/codability\/swift\/optional"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Codability/documentation/Codability/TC":{"type":"topic","abstract":[{"text":"Property wrapper that is Codable and can act as a proxy between","type":"text"},{"type":"text","text":" "},{"text":"the wrapped type and another Codable type. The wrapped type must","type":"text"},{"text":" ","type":"text"},{"text":"conform to ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","isActive":true,"type":"reference"},{"text":". The proxy target type is ","type":"text"},{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability\/CodableType","isActive":true,"type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/codability\/tc","role":"symbol","title":"TC","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TC"}],"navigatorTitle":[{"kind":"identifier","text":"TC"}],"kind":"symbol"},"doc://Codability/documentation/Codability/Transcodability":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URL","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Transcodability","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Codability\/documentation\/Codability\/Transcodability","abstract":[{"type":"text","text":"Conform to this protocol to provide a way to encode\/decode from another"},{"type":"text","text":" "},{"text":"Codable type and allow a type to be used with the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Codability\/documentation\/Codability\/TC"},{"text":" property wrapper.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Transcodability"}],"type":"topic","url":"\/documentation\/codability\/transcodability","title":"Transcodability"},"doc://Codability/documentation/Codability/Swift":{"type":"topic","title":"Swift","abstract":[],"identifier":"doc:\/\/Codability\/documentation\/Codability\/Swift","url":"\/documentation\/codability\/swift","kind":"symbol","role":"collection"},"doc://Codability/documentation/Codability/IsOptional":{"navigatorTitle":[{"kind":"identifier","text":"IsOptional"}],"role":"symbol","title":"IsOptional","identifier":"doc:\/\/Codability\/documentation\/Codability\/IsOptional","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"IsOptional","kind":"identifier"}],"url":"\/documentation\/codability\/isoptional","abstract":[{"type":"text","text":"Allow “where” clauses to specify that a type is Optional"}],"type":"topic"},"doc://Codability/s23ExpressibleByNilLiteralP":{"title":"Swift.ExpressibleByNilLiteral","type":"unresolvable","identifier":"doc:\/\/Codability\/s23ExpressibleByNilLiteralP"},"doc://Codability/documentation/Codability":{"title":"Codability","kind":"symbol","role":"collection","url":"\/documentation\/codability","identifier":"doc:\/\/Codability\/documentation\/Codability","type":"topic","abstract":[{"text":"A collection of macros and property wrappers to help with Codable conformance.","type":"text"}]},"doc://Codability/documentation/Codability/Swift/Optional":{"type":"topic","title":"Optional","abstract":[],"identifier":"doc:\/\/Codability\/documentation\/Codability\/Swift\/Optional","url":"\/documentation\/codability\/swift\/optional","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Swift","kind":"identifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Optional"}]},"doc://Codability/documentation/Codability/Swift/Optional/Transcodability-Implementations":{"identifier":"doc:\/\/Codability\/documentation\/Codability\/Swift\/Optional\/Transcodability-Implementations","role":"collectionGroup","kind":"article","type":"topic","title":"Transcodability Implementations","abstract":[],"url":"\/documentation\/codability\/swift\/optional\/transcodability-implementations"}}}